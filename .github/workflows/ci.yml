name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - master
  pull_request:
    branches:
      - dev

jobs:
  test:
    name: Run Test Suite
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' || startsWith(github.ref, 'refs/pull/')

    services:
      db:
        image: ankane/pgvector:latest
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: ${{ secrets.TEST_DATABASE_USER }}
          POSTGRES_PASSWORD: ${{ secrets.TEST_DATABASE_PASSWORD }}
          POSTGRES_DB: ${{ secrets.TEST_DATABASE_NAME }}
        options: >-
          --health-cmd="pg_isready -U ${{ secrets.TEST_DATABASE_USER }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"

      - name: Install PostgreSQL client
        run: sudo apt-get install -y libpq-dev

      - name: Install dependencies
        run: bundle install

      - name: Setup Database
        env:
          APP_ENV: test
          DATABASE_URL: postgresql://${{ secrets.TEST_DATABASE_USER }}:${{ secrets.TEST_DATABASE_PASSWORD }}@localhost:5432/${{ secrets.TEST_DATABASE_NAME }}
        run: ruby db/setup.rb

      - name: Run Tests
        env:
          APP_ENV: test
          DATABASE_URL: postgresql://${{ secrets.TEST_DATABASE_USER }}:${{ secrets.TEST_DATABASE_PASSWORD }}@localhost:5432/${{ secrets.TEST_DATABASE_NAME }}
        run: bundle exec rspec

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Deploy Application
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          APP_ENV: production
          HF_API_KEY: ${{ secrets.HF_API_KEY }}
        run: |
          echo "Starting deployment..."
          # Example: deploy to Heroku
          # heroku container:push web --app ${{ secrets.HEROKU_APP_NAME }}
          # heroku container:release web --app ${{ secrets.HEROKU_APP_NAME }}
